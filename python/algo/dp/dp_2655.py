# https://www.acmicpc.net/problem/2655

# 가장높은탑쌓기 스페셜 저지
# 시간 제한	메모리 제한	제출	정답	맞힌 사람	정답 비율
# 1 초	128 MB	3041	1043	776	36.449%
# 문제
# 밑면이 정사각형인 직육면체 벽돌들을 사용하여 탑을 쌓고자 한다. 탑은 벽돌을 한 개씩 아래에서 위로 쌓으면서 만들어 간다. 아래의 조건을 만족하면서 가장 높은 탑을 쌓을 수 있는 프로그램을 작성하시오.
#
# 벽돌은 회전시킬 수 없다. 즉, 옆면을 밑면으로 사용할 수 없다.
# 밑면의 넓이가 같은 벽돌은 없으며, 또한 무게가 같은 벽돌도 없다.
# 벽돌들의 높이는 같을 수도 있다.
# 탑을 쌓을 때 밑면이 좁은 벽돌 위에 밑면이 넓은 벽돌은 놓을 수 없다.
# 무게가 무거운 벽돌을 무게가 가벼운 벽돌 위에 놓을 수 없다.
# 입력
# 첫째 줄에는 입력될 벽돌의 수가 주어진다. 입력으로 주어지는 벽돌의 수는 최대 100개이다. 둘째 줄부터는 각 줄에 한 개의 벽돌에 관한 정보인 벽돌 밑면의 넓이, 벽돌의 높이 그리고 무게가 차례대로 양의 정수로 주어진다. 각 벽돌은 입력되는 순서대로 1부터 연속적인 번호를 가진다. 벽돌의 넓이, 높이 무게는 10,000보다 작거나 같은 자연수이다.
#
# 출력
# 탑을 쌓을 때 사용된 벽돌의 수를 빈칸없이 출력하고, 두 번째 줄부터는 탑의 가장 위 벽돌부터 가장 아래 벽돌까지 차례로 한 줄에 하나씩 벽돌 번호를 빈칸없이 출력한다.
#
# 예제 입력 1
# 5
# 25 3 4
# 4 4 6
# 9 2 3
# 16 2 5
# 1 5 2
# 예제 출력 1
# 3
# 5
# 3
# 1
# 출처
# Olympiad > 한국정보올림피아드 > KOI 1998 > 중등부 3번
#
# 데이터를 추가한 사람: doju
# 빠진 조건을 찾은 사람: goooora, kcm1700
# 알고리즘 분류
# 다이나믹 프로그래밍
# 정렬

if __name__ == '__main__':
    n = int(input())
    l = []
    l.append((0, 0, 0, 0))
    for i in range(1, n + 1):
        (w, h, we) = map(int, input().split())
        l.append((i, w, h, we))
    l.sort(key=lambda v: v[3])
    dp = [0] * (n+1)

    # width, height, weight
    for i in range(1, n + 1):
        w = l[i][1]
        for j in range(i):
            # i번째 벽돌이 가장 밑에 깔렸을때의 최대 높이 구하기
            # 다 돌아가며, 쌓을수 있는 만큼 최대 높이를 구하고,
            if w > l[j][1]: # 쌓을 수 있음
                dp[i] = max(dp[i], dp[j] + l[i][2])
    max_val = max(dp)
    index = n
    result = []

    while index != 0:
        if max_val == dp[index]:
            result.append(l[index][0])
            max_val -= l[index][2]
        index -= 1

    result.reverse()
    print(len(result))
    [print(i) for i in result]

